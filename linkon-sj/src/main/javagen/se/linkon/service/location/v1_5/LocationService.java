package se.linkon.service.location.v1_5;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;

/**
 * This class was generated by Apache CXF 3.1.8
 * 2016-11-29T15:03:20.981+01:00
 * Generated source version: 3.1.8
 * 
 */
@WebService(targetNamespace = "http://service.linkon.se/location/v1_5", name = "Location-service")
@XmlSeeAlso({org.oasis_open.docs.wss._2004._01.oasis_200401_wss_wssecurity_secext_1_0.ObjectFactory.class, se.linkon.petra.location.validcodes.data.v1_5.ObjectFactory.class, org.w3._2000._09.xmldsig_.ObjectFactory.class, se.linkon.petra.commoncomplexelements.data.v4_6.ObjectFactory.class, se.linkon.petra.commonelements.data.v4_6.ObjectFactory.class, se.linkon.petra.location.data.v1_5.ObjectFactory.class, org.oasis_open.docs.wss._2004._01.oasis_200401_wss_wssecurity_utility_1_0.ObjectFactory.class})
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
public interface LocationService {

    /**
     * This operation search for all locations located in a specified zone.
     * It is possible to ask for several zones at the same time using a
     * list of ZoneLocationSpecifications.
     * 
     * Example:ProducerCode = 74 and LocationId = 50001 returns five location in central Stockholm; 74/1 - Stockholm C, 74/622 - Stockholm Cityterminalen, 74/12144 - Stockholm Klara Malarstrand, 74/20749 - T-centralen, 74/24382 - Stockholm Sergels torg
     */
    @WebMethod
    @WebResult(name = "FindZoneLocationsResult", targetNamespace = "http://petra.linkon.se/location/data/v1_5", partName = "result")
    public se.linkon.petra.location.data.v1_5.FindZoneLocationsResult findZoneLocations(
        @WebParam(partName = "parameters", name = "FindZoneLocationsSpecification", targetNamespace = "http://petra.linkon.se/location/data/v1_5")
        se.linkon.petra.location.data.v1_5.FindZoneLocationsSpecification parameters,
        @WebParam(partName = "clientInformationHeader", name = "ClientInformation", targetNamespace = "http://petra.linkon.se/commoncomplexelements/data/v4_6", header = true)
        se.linkon.petra.commoncomplexelements.data.v4_6.ClientInformation clientInformationHeader
    ) throws LocationException;

    /**
     * Returns the URL of the valid AllLocations file. The AllLocations file contains data about all locations. Description of the file can be found att the index page for the environment.
     */
    @WebMethod
    @WebResult(name = "LocationsURL", targetNamespace = "http://petra.linkon.se/location/data/v1_5", partName = "result")
    public se.linkon.petra.location.data.v1_5.LocationsURL getLocationsURL(
        @WebParam(partName = "parameters", name = "GetLocationsURL", targetNamespace = "http://petra.linkon.se/location/data/v1_5")
        se.linkon.petra.commonelements.data.v4_6.EmptyType parameters,
        @WebParam(partName = "clientInformationHeader", name = "ClientInformation", targetNamespace = "http://petra.linkon.se/commoncomplexelements/data/v4_6", header = true)
        se.linkon.petra.commoncomplexelements.data.v4_6.ClientInformation clientInformationHeader
    ) throws LocationException;

    /**
     * FindAddresses search for postal addresses formatted in a way useful for Taxi booking. Generic search can be done by not providing optional attributes. To get a response ExternalSystem shall be set to FLYGTA. The response can hold a Rows tag. This tag shows the total amount of addresses corresponding of the question. Maximum of returned addresses in one response are 10. To get address number 11 - 20, a new question has to be sent with the StartRow tag set to 11.
     */
    @WebMethod
    @WebResult(name = "FindAddressesResponse", targetNamespace = "http://petra.linkon.se/location/data/v1_5", partName = "result")
    public se.linkon.petra.location.data.v1_5.FindAddressesResponse findAddresses(
        @WebParam(partName = "parameters", name = "FindAddressesQuery", targetNamespace = "http://petra.linkon.se/location/data/v1_5")
        se.linkon.petra.location.data.v1_5.FindAddressesQuery parameters,
        @WebParam(partName = "clientInformationHeader", name = "ClientInformation", targetNamespace = "http://petra.linkon.se/commoncomplexelements/data/v4_6", header = true)
        se.linkon.petra.commoncomplexelements.data.v4_6.ClientInformation clientInformationHeader
    ) throws LocationException;

    /**
     * The result of this operation is a list containing the most common locations the sales unit and sales channel handle. Please note that this operation will return a large amount of locations. For performance reasons a local cache is recommended with experation time 06.00.
     */
    @WebMethod
    @WebResult(name = "GetFrequentLocationsResponse", targetNamespace = "http://petra.linkon.se/location/data/v1_5", partName = "result")
    public se.linkon.petra.location.data.v1_5.GetFrequentLocationsResponse getFrequentLocations(
        @WebParam(partName = "parameters", name = "GetFrequentLocationsQuery", targetNamespace = "http://petra.linkon.se/location/data/v1_5")
        se.linkon.petra.location.data.v1_5.GetFrequentLocationsQuery parameters,
        @WebParam(partName = "clientInformationHeader", name = "ClientInformation", targetNamespace = "http://petra.linkon.se/commoncomplexelements/data/v4_6", header = true)
        se.linkon.petra.commoncomplexelements.data.v4_6.ClientInformation clientInformationHeader
    ) throws LocationException;

    /**
     * Returns valid codes.
     */
    @WebMethod
    @WebResult(name = "GetValidCodesResponse", targetNamespace = "http://petra.linkon.se/location/validcodes/data/v1_5", partName = "result")
    public se.linkon.petra.location.validcodes.data.v1_5.GetValidCodesResponse getValidCodes(
        @WebParam(partName = "parameters", name = "GetValidCodesRequest", targetNamespace = "http://petra.linkon.se/location/validcodes/data/v1_5")
        se.linkon.petra.location.validcodes.data.v1_5.GetValidCodesRequest parameters,
        @WebParam(partName = "clientInformationHeader", name = "ClientInformation", targetNamespace = "http://petra.linkon.se/commoncomplexelements/data/v4_6", header = true)
        se.linkon.petra.commoncomplexelements.data.v4_6.ClientInformation clientInformationHeader
    ) throws LocationException;

    /**
     * This operation has two ways to find geographical locations in the system valid for the sales channel. A geographical location is typical a Train station, a bus stop or just a place on a map (i.e. Stockholm City).
     * 
     *       With free text search the system will search for locations with location name starting with the given string in LocationQueryField.
     * 
     * If the values are proper in ProducerCode and LocationQueryField the operation will return exact one location.
     * 
     * LocationQueryField is an alphanumeric field that can hold the beginning of a LocationName (string) or an exact LocationId (numeric).
     * 
     * For better performance it is good practice to use numeric values in ProducerCode and LocationId (e.g from the timetable) in this operation. ProducerCode=74 and LocationQueryField = 1 will return the location Stockholm Central Station.
     */
    @WebMethod
    @WebResult(name = "FindLocationsResponse", targetNamespace = "http://petra.linkon.se/location/data/v1_5", partName = "result")
    public se.linkon.petra.location.data.v1_5.FindLocationsResponse findLocations(
        @WebParam(partName = "parameters", name = "FindLocationsQuery", targetNamespace = "http://petra.linkon.se/location/data/v1_5")
        se.linkon.petra.location.data.v1_5.FindLocationsQuery parameters,
        @WebParam(partName = "clientInformationHeader", name = "ClientInformation", targetNamespace = "http://petra.linkon.se/commoncomplexelements/data/v4_6", header = true)
        se.linkon.petra.commoncomplexelements.data.v4_6.ClientInformation clientInformationHeader
    ) throws LocationException;
}
